import { S as SvelteComponentDev, i as init, s as safe_not_equal, a as space, e as element, t as text, d as claim_text, c as claim_element, b as children, f as detach, g as attr, h as add_location, j as insert, k as append, n as noop } from './chunk.1f1ec905.js';

/* src/routes/about.svelte generated by Svelte v3.6.7 */

const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	var t0, div0, h1, t1, t2, h2, t3, t4, h3, t5, t6, div1, p0, t7, t8, p1, t9, t10, p2, t11;

	return {
		c: function create() {
			t0 = space();
			div0 = element("div");
			h1 = element("h1");
			t1 = text("Best-in-class customer experiences demand cloud native");
			t2 = space();
			h2 = element("h2");
			t3 = text("Enterprise Grade Kubernetes With a Full Cloud Native Ecosystem");
			t4 = space();
			h3 = element("h3");
			t5 = text("Give every engineer the power to create brilliantly");
			t6 = space();
			div1 = element("div");
			p0 = element("p");
			t7 = text("This simple series of demos were created by a team of hobbyist programmers at Mesosphere. Our aim is to demonstrate the incredible end-user experiences that are possible with the latest in cloud native software. Kubernetes, Kafka, Cassandra, Spark, and\n        others are necessary tools to deliver the right data to the right place in the right format at the right time.");
			t8 = space();
			p1 = element("p");
			t9 = text("With automation, even non-experts in these newest tools can deploy and manage complex, distributed software systems.");
			t10 = space();
			p2 = element("p");
			t11 = text("We hope these simple examples spur you and your collaborators to think expansively about what's possible, without massive teams of dedicated staff supporting each of these technologies.");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "\n\n\n");

			div0 = claim_element(nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			h1 = claim_element(div0_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Best-in-class customer experiences demand cloud native");
			h1_nodes.forEach(detach);
			t2 = claim_text(div0_nodes, "\n    ");

			h2 = claim_element(div0_nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t3 = claim_text(h2_nodes, "Enterprise Grade Kubernetes With a Full Cloud Native Ecosystem");
			h2_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t4 = claim_text(nodes, "\n\n\n\n\n");

			h3 = claim_element(nodes, "H3", { class: true }, false);
			var h3_nodes = children(h3);

			t5 = claim_text(h3_nodes, "Give every engineer the power to create brilliantly");
			h3_nodes.forEach(detach);
			t6 = claim_text(nodes, "\n");

			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			p0 = claim_element(div1_nodes, "P", {}, false);
			var p0_nodes = children(p0);

			t7 = claim_text(p0_nodes, "This simple series of demos were created by a team of hobbyist programmers at Mesosphere. Our aim is to demonstrate the incredible end-user experiences that are possible with the latest in cloud native software. Kubernetes, Kafka, Cassandra, Spark, and\n        others are necessary tools to deliver the right data to the right place in the right format at the right time.");
			p0_nodes.forEach(detach);
			t8 = claim_text(div1_nodes, "\n    ");

			p1 = claim_element(div1_nodes, "P", {}, false);
			var p1_nodes = children(p1);

			t9 = claim_text(p1_nodes, "With automation, even non-experts in these newest tools can deploy and manage complex, distributed software systems.");
			p1_nodes.forEach(detach);
			t10 = claim_text(div1_nodes, "\n    ");

			p2 = claim_element(div1_nodes, "P", {}, false);
			var p2_nodes = children(p2);

			t11 = claim_text(p2_nodes, "We hope these simple examples spur you and your collaborators to think expansively about what's possible, without massive teams of dedicated staff supporting each of these technologies.");
			p2_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			document.title = "About";
			attr(h1, "class", "svelte-519kh9");
			add_location(h1, file, 34, 4, 585);
			attr(h2, "class", "svelte-519kh9");
			add_location(h2, file, 35, 4, 653);
			attr(div0, "class", "header svelte-519kh9");
			add_location(div0, file, 33, 0, 560);
			attr(h3, "class", "svelte-519kh9");
			add_location(h3, file, 41, 0, 736);
			add_location(p0, file, 43, 4, 820);
			add_location(p1, file, 47, 4, 1217);
			add_location(p2, file, 50, 4, 1359);
			attr(div1, "class", "text");
			add_location(div1, file, 42, 0, 797);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, div0, anchor);
			append(div0, h1);
			append(h1, t1);
			append(div0, t2);
			append(div0, h2);
			append(h2, t3);
			insert(target, t4, anchor);
			insert(target, h3, anchor);
			append(h3, t5);
			insert(target, t6, anchor);
			insert(target, div1, anchor);
			append(div1, p0);
			append(p0, t7);
			append(div1, t8);
			append(div1, p1);
			append(p1, t9);
			append(div1, t10);
			append(div1, p2);
			append(p2, t11);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(div0);
				detach(t4);
				detach(h3);
				detach(t6);
				detach(div1);
			}
		}
	};
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default About;
